---
layout: post
title:  "MemberDao"
date:   2019-03-15 09:29:59
author: Db Jin
categories: Study
tags: DAO
---


## MemberDao

```java
package spms.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import spms.vo.Member;

public class MemberDao {
	Connection connection; 
	
	//Dependency Injection을 위함, 커넥션은 컨트롤러에서
	public void setConnection(Connection connection) {
		this.connection = connection;
	}
	
	//멤버 목록 리스트
	public List<Member> selectList() throws Exception{ //객체 유연성을 위해 리턴은 List
		Statement stmt = null;
		ResultSet rs = null;
		String sql = "select MNO,MNAME,EMAIL,CRE_DATE FROM members ORDER BY MNO ASC";
		try {
			stmt = connection.createStatement();
			rs = stmt.executeQuery(sql);
			
			ArrayList<Member> members = new ArrayList<Member>(); //멤버 리스트
			
			//멤버를 리스트로
			while(rs.next()) {
				members.add(
						new Member()
									.setNo(rs.getInt("MNO"))
									.setName(rs.getString("MNAME"))
									.setEmail(rs.getString("EMAIL"))
									.setCreatedDate(rs.getDate("CRE_DATE")));
			}
			return members;
		} catch (Exception e) {
			throw e;
		} finally {
			try {
				if(rs != null) rs.close();
				if(stmt != null) stmt.close();
				
			} catch (Exception e2) {
				
			}
		}
	}
	
	//회원등록
	public int insert(Member member) throws Exception{
		PreparedStatement pstmt = null;
		String sql = "INSERT INTO MEMBERS(EMAIL, PWD, MNAME, CRE_DATE, MOD_DATE) VALUES (?, ?, ?, NOW(), NOW())";
		int n = -3;
		try {
			pstmt = connection.prepareStatement(sql);
			pstmt.setString(1, member.getEmail());
			pstmt.setString(2, member.getPassword());
			pstmt.setString(3, member.getName());
			n = pstmt.executeUpdate();
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(pstmt != null) pstmt.close();
			} catch (Exception e2) {
				try {
					if(pstmt != null) pstmt.close();
				} catch (Exception e) {
					// TODO: handle exception
				}
			}
		}
		return n;
	}
	

	
	
	//회원 삭제
	public int delete(int no) throws Exception{
		Statement stmt = null;
		String sql = "delete from MEMBERS where mno = " + no;
		try {
			stmt = connection.createStatement();
			return stmt.executeUpdate(sql);
		} finally {
			if(stmt != null) stmt.close();
		}
		
	}
	
	//회원 상세 정보 조회
	public Member selectOne(int no) throws Exception{
		Statement stmt = null;
		ResultSet rs = null;
		Member member = new Member();
		String sql = "select MNO, EMAIL, MNAME, CRE_DATE from MEMBERS where MNO=" + no;		
		stmt = connection.createStatement();
		rs = stmt.executeQuery(sql);
		if(rs.next()) {
			member.setNo(rs.getInt("MNO"))
				  .setEmail(rs.getString("EMAIL"))
				  .setName(rs.getString("MNAME"))
				  .setCreatedDate(rs.getDate("CRE_DATE"));
			
		}
		return member;
		
	}
	
	
//	//회원 정보 변경
	public int update(Member member) throws Exception{
		PreparedStatement pstmt = null;
		String sql = "update MEMBERS set EMAIL=?, MNAME=?, MOD_DATE=now() WHERE MNO=?";
		int n = -3;
		try {
			pstmt = connection.prepareStatement(sql);
			pstmt.setString(1, member.getEmail());
			pstmt.setString(2, member.getName());
			pstmt.setInt(3, member.getNo());
			n = pstmt.executeUpdate();
		}catch (Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) pstmt.close();
		}
		return n;
	}
	
	//있으면 Member객체 리턴, 없으면 null 리턴 (로그인 서블릿에서 사용)
	public Member exist(String email, String password) throws Exception{
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "SELECT MNAME,EMAIL FROM MEMBERS WHERE EMAIL=? AND PWD=?";
		Member member = null;
		
		pstmt = connection.prepareStatement(sql);
		pstmt.setString(1, email);
		pstmt.setString(2, password);
		rs = pstmt.executeQuery();
		if(rs.next()) {
				member = new Member()
							.setName(rs.getString("MNAME"))
							.setEmail(rs.getString("EMAIL"));
		}
		if(rs != null) rs.close();
		if(pstmt != null) pstmt.close();
		
		return member;
		

	}
}


```
## MemberListServlet
```java
@WebServlet("/member/list")
public class MemberListServlet extends HttpServlet {
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		try {
			ServletContext sc = this.getServletContext();
			Connection conn = (Connection) sc.getAttribute("conn");
			
			MemberDao memberDao = new MemberDao();
			memberDao.setConnection(conn);
			
			req.setAttribute("members", memberDao.selectList());
	
			resp.setContentType("text/html; charset=UTF-8");
			//JSP로 출력을 위임한다
			RequestDispatcher rd = req.getRequestDispatcher("/member/MemberList.jsp");
			rd.include(req, resp);
			
		} catch (Exception e) {

			e.printStackTrace();
			req.setAttribute("error", e);
			RequestDispatcher rd = req.getRequestDispatcher("/Error.jsp");
			rd.forward(req, resp);
		} 
	}
```